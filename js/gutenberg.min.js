(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _wp$components = wp.components,
    PanelRow = _wp$components.PanelRow,
    TextControl = _wp$components.TextControl,
    CheckboxControl = _wp$components.CheckboxControl;
var _wp$compose = wp.compose,
    withInstanceId = _wp$compose.withInstanceId,
    compose = _wp$compose.compose;
var _wp$data = wp.data,
    withSelect = _wp$data.withSelect,
    withDispatch = _wp$data.withDispatch;
var _wp$element = wp.element,
    Fragment = _wp$element.Fragment,
    Component = _wp$element.Component;
var PluginPostStatusInfo = wp.editPost.PluginPostStatusInfo;
var registerPlugin = wp.plugins.registerPlugin;

var LinksTo = function (_Component) {
	_inherits(LinksTo, _Component);

	function LinksTo(props) {
		_classCallCheck(this, LinksTo);

		var _this = _possibleConstructorReturn(this, (LinksTo.__proto__ || Object.getPrototypeOf(LinksTo)).call(this, props));

		_this.state = {
			prevUrl: '',
			prevNewTab: false
		};

		_this.toggleStatus = _this.toggleStatus.bind(_this);
		_this.toggleNewTab = _this.toggleNewTab.bind(_this);
		_this.updateLink = _this.updateLink.bind(_this);
		_this.state.enabled = _this.hasUrl();
		return _this;
	}

	_createClass(LinksTo, [{
		key: 'getUrl',
		value: function getUrl() {
			return this.props.meta._links_to || '';
		}
	}, {
		key: 'getDisplayUrl',
		value: function getDisplayUrl() {
			var prevUrl = this.state.prevUrl;

			return this.getUrl() || prevUrl;
		}
	}, {
		key: 'hasUrl',
		value: function hasUrl() {
			return this.getUrl().length > 0;
		}
	}, {
		key: 'opensInNewTab',
		value: function opensInNewTab() {
			return this.props.meta._links_to_target === '_blank';
		}
	}, {
		key: 'enabled',
		value: function enabled() {
			return this.state.enabled;
		}
	}, {
		key: 'toggleStatus',
		value: function toggleStatus() {
			var _this2 = this;

			var prevUrl = this.state.prevUrl;


			this.setState(function (prevState) {
				var newState = {
					enabled: !prevState.enabled
				};

				if (prevState.enabled) {
					newState.prevUrl = _this2.getUrl();
				}

				return newState;
			});

			if (this.enabled()) {
				this.updateLink(null);
				this.setState({
					prevUrl: this.getUrl(),
					prevNewTab: this.opensInNewTab()
				});
			} else {
				this.updateLink(prevUrl);
			}
		}
	}, {
		key: 'toggleNewTab',
		value: function toggleNewTab() {
			this.updateNewTab(!this.opensInNewTab());
		}
	}, {
		key: 'updateLink',
		value: function updateLink(link) {
			var _props = this.props,
			    meta = _props.meta,
			    onUpdateLink = _props.onUpdateLink;

			onUpdateLink(meta, link);
		}
	}, {
		key: 'updateNewTab',
		value: function updateNewTab(enabled) {
			var _props2 = this.props,
			    meta = _props2.meta,
			    onUpdateNewTab = _props2.onUpdateNewTab;

			onUpdateNewTab(meta, enabled);
		}
	}, {
		key: 'render',
		value: function render() {
			return React.createElement(
				Fragment,
				null,
				React.createElement(
					PluginPostStatusInfo,
					null,
					React.createElement(CheckboxControl, {
						label: 'Custom Permalink',
						checked: this.enabled(),
						onChange: this.toggleStatus
					})
				),
				this.enabled() && React.createElement(
					'div',
					null,
					React.createElement(
						PluginPostStatusInfo,
						null,
						React.createElement(TextControl, {
							label: 'Links to',
							value: this.getDisplayUrl(),
							onChange: this.updateLink,
							placeholder: 'https://'
						})
					),
					React.createElement(
						PluginPostStatusInfo,
						null,
						React.createElement(CheckboxControl, {
							label: 'Open in new tab',
							checked: this.opensInNewTab(),
							onChange: this.toggleNewTab
						})
					)
				)
			);
		}
	}]);

	return LinksTo;
}(Component);

var PageLinksTo = compose([withSelect(function (select) {
	return {
		meta: select('core/editor').getEditedPostAttribute('meta')
	};
}), withDispatch(function (dispatch) {
	return {
		onUpdateLink: function onUpdateLink(meta, link) {
			dispatch('core/editor').editPost({ meta: _extends({}, meta, { _links_to: link }) });
		},
		onUpdateNewTab: function onUpdateNewTab(meta, enabled) {
			dispatch('core/editor').editPost({
				meta: _extends({}, meta, { _links_to_target: enabled ? '_blank' : '' })
			});
		}
	};
}), withInstanceId])(LinksTo);

registerPlugin('page-links-to', {
	render: PageLinksTo
});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
